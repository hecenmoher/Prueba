

(function (globals) {

  var django = globals.django || (globals.django = {});

  
  django.pluralidx = function (count) { return (count == 1) ? 0 : 1; };
  

  
  /* gettext library */

  django.catalog = {
    "%(count)s results": "%(count)s resultados", 
    "All %(count)s results": "%(count)s resultados en total", 
    "Cancel": "Cancelar", 
    "Click to insert your credentials": "Haz clic aqu\u00ed para insertar las credenciales.", 
    "Could not load project credentials.": "No se pudieron cargar las credenciales del proyecto.", 
    "Could not load projects list.": "No se pudo cargar la lista de proyectos.", 
    "Could not save your project selection.": "No se pudo guardar la selecci\u00f3n de proyectos.", 
    "Credentials": "Credenciales", 
    "History Preferences": "Preferencias de historial", 
    "How can we improve this page?": "\u00bfC\u00f3mo podemos mejorar esta p\u00e1gina?", 
    "Insert": "Insertar", 
    "Insert credential": "Insertar credencial", 
    "It doesn't have what I need.": "No tiene la informaci\u00f3n que necesito.", 
    "It's inaccurate.": "No es correcta.", 
    "Loading credentials...": "Cargando credenciales\u2026", 
    "Loading projects...": "Cargando proyectos\u2026", 
    "Loading your history...": "Cargando el historial\u2026", 
    "Most Recently Visited": "Las p\u00e1ginas que m\u00e1s visit\u00e9 recientemente", 
    "My Most Visited": "Las p\u00e1ginas que m\u00e1s visit\u00e9", 
    "Other (use text area above)": "Otros (usar \u00e1rea de texto de arriba)", 
    "Project": "Proyecto", 
    "Sign in to insert your credentials.": "Accede para insertar las credenciales.", 
    "Sign in to view your recently visited pages.": "Accede para ver las p\u00e1ginas que visitaste recientemente.", 
    "Sorry. We couldn't load the credentials for this project. You can visit the %(start_link)sDevelopers Console%(end_link)s to see them.": "Sorry. We couldn't load the credentials for this project. You can visit the %(start_link)sDevelopers Console%(end_link)s to see them.", 
    "Sorry. We couldn't load your projects. You can visit the %(start_link)sDevelopers Console%(end_link)s to see them.": "Sorry. We couldn't load your projects. You can visit the %(start_link)sDevelopers Console%(end_link)s to see them.", 
    "The Google Developers website now saves the pages you visit when you are logged into Google. You can quickly access them via the history icon at the top of the site. %(link_html)sManage History%(end_link_html)s": "El sitio web de Google Developers ahora guarda las p\u00e1ginas que visitas cuando accedes a Google. Puedes acceder a ellas r\u00e1pidamente mediante el \u00edcono del historial ubicado en la parte superior del sitio. %(link_html)sAdministrar historial%(end_link_html)s", 
    "There's a typo, broken link, or layout problem.": "Hay un error tipogr\u00e1fico, un v\u00ednculo que no funciona o un problema de dise\u00f1o.", 
    "This project has no appropriate credentials. You can add one in the %(start_link)sDevelopers Console%(end_link)s.": "This project has no appropriate credentials. You can add one in the %(start_link)sDevelopers Console%(end_link)s.", 
    "Turn on %(begin_link_html)shistory%(end_link_html)s to view recently visited pages.": "Activa el %(begin_link_html)shistorial%(end_link_html)s para ver las p\u00e1ginas visitadas recientemente.", 
    "You have no projects. You can create one in the %(start_link)sDevelopers Console%(end_link)s.": "You have no projects. You can create one in the %(start_link)sDevelopers Console%(end_link)s.", 
    "Your browsing history on Google Developers will appear here.": "El historial de navegaci\u00f3n de Google Developers aparecer\u00e1 aqu\u00ed."
  };

  django.gettext = function (msgid) {
    var value = django.catalog[msgid];
    if (typeof(value) == 'undefined') {
      return msgid;
    } else {
      return (typeof(value) == 'string') ? value : value[0];
    }
  };

  django.ngettext = function (singular, plural, count) {
    var value = django.catalog[singular];
    if (typeof(value) == 'undefined') {
      return (count == 1) ? singular : plural;
    } else {
      return value[django.pluralidx(count)];
    }
  };

  django.gettext_noop = function (msgid) { return msgid; };

  django.pgettext = function (context, msgid) {
    var value = django.gettext(context + '\x04' + msgid);
    if (value.indexOf('\x04') != -1) {
      value = msgid;
    }
    return value;
  };

  django.npgettext = function (context, singular, plural, count) {
    var value = django.ngettext(context + '\x04' + singular, context + '\x04' + plural, count);
    if (value.indexOf('\x04') != -1) {
      value = django.ngettext(singular, plural, count);
    }
    return value;
  };
  

  django.interpolate = function (fmt, obj, named) {
    if (named) {
      return fmt.replace(/%\(\w+\)s/g, function(match){return String(obj[match.slice(2,-2)])});
    } else {
      return fmt.replace(/%s/g, function(match){return String(obj.shift())});
    }
  };


  /* formatting library */

  django.formats = {
    "DATETIME_FORMAT": "j \\d\\e F \\d\\e Y \\a \\l\\a\\s H:i", 
    "DATETIME_INPUT_FORMATS": [
      "%d/%m/%Y %H:%M:%S", 
      "%d/%m/%Y %H:%M:%S.%f", 
      "%d/%m/%Y %H:%M", 
      "%d/%m/%y %H:%M:%S", 
      "%d/%m/%y %H:%M:%S.%f", 
      "%d/%m/%y %H:%M", 
      "%Y-%m-%d %H:%M:%S", 
      "%Y-%m-%d %H:%M:%S.%f", 
      "%Y-%m-%d %H:%M", 
      "%Y-%m-%d"
    ], 
    "DATE_FORMAT": "j \\d\\e F \\d\\e Y", 
    "DATE_INPUT_FORMATS": [
      "%d/%m/%Y", 
      "%d/%m/%y", 
      "%Y-%m-%d"
    ], 
    "DECIMAL_SEPARATOR": ",", 
    "FIRST_DAY_OF_WEEK": "1", 
    "MONTH_DAY_FORMAT": "j \\d\\e F", 
    "NUMBER_GROUPING": "3", 
    "SHORT_DATETIME_FORMAT": "d/m/Y H:i", 
    "SHORT_DATE_FORMAT": "d/m/Y", 
    "THOUSAND_SEPARATOR": ".", 
    "TIME_FORMAT": "H:i", 
    "TIME_INPUT_FORMATS": [
      "%H:%M:%S", 
      "%H:%M:%S.%f", 
      "%H:%M"
    ], 
    "YEAR_MONTH_FORMAT": "F \\d\\e Y"
  };

  django.get_format = function (format_type) {
    var value = django.formats[format_type];
    if (typeof(value) == 'undefined') {
      return format_type;
    } else {
      return value;
    }
  };

  /* add to global namespace */
  globals.pluralidx = django.pluralidx;
  globals.gettext = django.gettext;
  globals.ngettext = django.ngettext;
  globals.gettext_noop = django.gettext_noop;
  globals.pgettext = django.pgettext;
  globals.npgettext = django.npgettext;
  globals.interpolate = django.interpolate;
  globals.get_format = django.get_format;

}(this));

